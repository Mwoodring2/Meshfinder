# ðŸ“‚ Project Folder Template â€” ModelFinder / 3D ML Archive (Patched)

This template is updated to reflect **true Phase 1 capabilities** and corrected docs alignment.

```plaintext
ModelFinder_Project/
â”‚
â”œâ”€â”€ data/                      # 3D assets & outputs
â”‚   â”œâ”€â”€ raw/                   # Original STL, OBJ, ZTL, FBX files (ZTL placeholders only)
â”‚   â”œâ”€â”€ glb/                   # Normalized GLB exports (supported now)
â”‚   â”œâ”€â”€ posters/               # Preview renders (optional)
â”‚   â””â”€â”€ metrics/               # JSON/CSV of computed mesh stats
â”‚
â”œâ”€â”€ db/                        # Index storage
â”‚   â”œâ”€â”€ modelfinder.db         # SQLite database (metadata, metrics, embeddings)
â”‚   â””â”€â”€ faiss.index            # FAISS similarity index (optional, future)
â”‚
â”œâ”€â”€ src/                       # Source code
â”‚   â”œâ”€â”€ indexer/               # Scanning + metrics + converters (current core)
â”‚   â”œâ”€â”€ embedder/              # Learned embeddings (future ML)
â”‚   â”œâ”€â”€ qa/                    # Repair + validation (future)
â”‚   â”œâ”€â”€ ui/                    # PyQt UI (future)
â”‚   â””â”€â”€ utils/                 # Helpers (logging, config)
â”‚
â”œâ”€â”€ scripts/                   # CLI utilities & build scripts
â”‚   â”œâ”€â”€ build_exe.bat          # Windows: one-click PyInstaller build
â”‚   â”œâ”€â”€ build_run.ps1          # PowerShell: venv setup + scan + build
â”‚   â”œâ”€â”€ scan_folder.py         # Run indexing pipeline
â”‚   â””â”€â”€ search_cli.py          # Similarity + metadata search CLI
â”‚
â”œâ”€â”€ tests/                     # Unit tests & sample assets (future)
â”‚
â”œâ”€â”€ docs/                      # Documentation
â”‚   â”œâ”€â”€ roadmap.md             # Development phases
â”‚   â”œâ”€â”€ architecture.md        # Current vs future system layout
â”‚   â””â”€â”€ setup_guide.md         # Install & usage guide (with PS tips)
â”‚
â”œâ”€â”€ requirements-core.txt      # Core deps: numpy, faiss-cpu, trimesh, pygltflib, pillow, tqdm, pyrender, PyOpenGL
â”œâ”€â”€ requirements-ui.txt        # (Later) PyQt6, PyQt6-tools
â”œâ”€â”€ requirements-ml.txt        # (Later) torch, torchvision, transformers, open3d/kaolin
â”œâ”€â”€ README.md                  # Project overview & quickstart
â””â”€â”€ .gitignore                 # Git hygiene (skip venv, build, db, data outputs)
```

---

### ðŸ”‘ Patch Notes

**1. Embeddings**  
- Corrected: deterministic **10D geometric embeddings** (bbox, tris, area, watertight, aspect ratios).  
- Replaceable later with **learned ML embeddings**.

**2. Database schema**  
- Canonical: `assets` table (path, ext, size, hash, metrics) + `embeddings` table (asset_id, vec).  
- No `filename`/`placeholder random vectors`. Docs updated.

**3. Requirements split**  
- `requirements-core.txt`: minimal, safe for Phase 1.  
- `requirements-ui.txt`: only when UI starts.  
- `requirements-ml.txt`: only when ML training starts.  
- Removed `sqlite3` (stdlib), heavy ML deps from Phase 1.

**4. Supported formats**  
- **Now**: `.obj`, `.stl` (ZTL recorded as placeholder).  
- **Exports**: `.glb`.  
- **Planned**: FBX, PLY, 3DS, DAE, ZTL â†’ via Assimp or ZBrush bridge.

**5. FAISS index**  
- Current CLI rebuilds FAISS in-memory from SQLite.  
- Disk-based `faiss.index` is **optional future optimization** (flag TBD).

**6. Entrypoints**  
- Clarified: `src/indexer/modelfinder_indexer.py` is **engine**.  
- CLI tools (`scan_folder.py`, `search_cli.py`) are the **user-facing entrypoints**.

**7. Windows notes**  
- Execution policy: recommend `Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass` before running PowerShell scripts.  
- Poster renders (`pyrender`) may fail on headless setups; optional.

---

âœ… This now matches **actual working code** in Phase 1 and leaves clean paths open for Phase 2â€“4 (intelligence, advanced, ecosystem).
